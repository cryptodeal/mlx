load("@build_bazel_rules_apple//apple:resources.bzl", "apple_metal_library")

apple_metal_library(
    name = "mlx_metallib",
    copts = [
        "-Iexternal/mlx~",
        "-Iexternal/mlx~/mlx/backend/metal/kernels/metal_3_1",
        "-I.",
        "-Imlx/backend/metal/kernels/metal_3_1",
        "-D_METAL_",
    ],
    srcs = [
        "mlx/backend/metal/kernels/arg_reduce.metal",
        "mlx/backend/metal/kernels/conv.metal",
        "mlx/backend/metal/kernels/gemv.metal",
        "mlx/backend/metal/kernels/layer_norm.metal",
        "mlx/backend/metal/kernels/random.metal",
        "mlx/backend/metal/kernels/rms_norm.metal",
        "mlx/backend/metal/kernels/rope.metal",
        "mlx/backend/metal/kernels/scaled_dot_product_attention.metal",
        "mlx/backend/metal/kernels/steel/attn/kernels/steel_attention.metal",
        "mlx/backend/metal/kernels/arange.metal",
        "mlx/backend/metal/kernels/binary.metal",
        "mlx/backend/metal/kernels/binary_two.metal",
        "mlx/backend/metal/kernels/copy.metal",
        "mlx/backend/metal/kernels/fft.metal",
        "mlx/backend/metal/kernels/reduce.metal",
        "mlx/backend/metal/kernels/quantized.metal",
        "mlx/backend/metal/kernels/scan.metal",
        "mlx/backend/metal/kernels/softmax.metal",
        "mlx/backend/metal/kernels/sort.metal",
        "mlx/backend/metal/kernels/ternary.metal",
        "mlx/backend/metal/kernels/unary.metal",
        "mlx/backend/metal/kernels/steel/conv/kernels/steel_conv.metal",
        "mlx/backend/metal/kernels/steel/conv/kernels/steel_conv_general.metal",
        "mlx/backend/metal/kernels/steel/gemm/kernels/steel_gemm_fused.metal",
        "mlx/backend/metal/kernels/steel/gemm/kernels/steel_gemm_masked.metal",
        "mlx/backend/metal/kernels/steel/gemm/kernels/steel_gemm_splitk.metal",
        "mlx/backend/metal/kernels/gemv_masked.metal",
    ],
    hdrs = [
        # Base headers for metal kernels
        "mlx/backend/metal/kernels/metal_3_1/bf16.h",
        "mlx/backend/metal/kernels/bf16_math.h",
        "mlx/backend/metal/kernels/complex.h",
        "mlx/backend/metal/kernels/defines.h",
        "mlx/backend/metal/kernels/expm1f.h",
        "mlx/backend/metal/kernels/utils.h",
        # Op specific headers
        "mlx/backend/metal/kernels/steel/conv/params.h",
        "mlx/backend/metal/kernels/steel/utils.h",
        "mlx/backend/metal/kernels/sdpa_vector.h",
        "mlx/backend/metal/kernels/steel/defines.h",
        "mlx/backend/metal/kernels/steel/conv/conv.h",
        "mlx/backend/metal/kernels/steel/conv/loader.h",
        "mlx/backend/metal/kernels/steel/conv/loaders/loader_channel_l.h",
        "mlx/backend/metal/kernels/steel/conv/loaders/loader_channel_n.h",
        "mlx/backend/metal/kernels/steel/conv/loaders/loader_general.h",
        "mlx/backend/metal/kernels/steel/conv/kernels/steel_conv.h",
        "mlx/backend/metal/kernels/steel/conv/kernels/steel_conv_general.h",
        "mlx/backend/metal/kernels/steel/gemm/gemm.h",
        "mlx/backend/metal/kernels/steel/gemm/mma.h",
        "mlx/backend/metal/kernels/steel/gemm/loader.h",
        "mlx/backend/metal/kernels/steel/gemm/transforms.h",
        "mlx/backend/metal/kernels/steel/gemm/kernels/steel_gemm_fused.h",
        "mlx/backend/metal/kernels/steel/gemm/kernels/steel_gemm_masked.h",
        "mlx/backend/metal/kernels/steel/gemm/kernels/steel_gemm_splitk.h",
        "mlx/backend/metal/kernels/steel/utils/type_traits.h",
        "mlx/backend/metal/kernels/steel/utils/integral_constant.h",
        "mlx/backend/metal/kernels/steel/attn/attn.h",
        "mlx/backend/metal/kernels/steel/attn/loader.h",
        "mlx/backend/metal/kernels/steel/attn/mma.h",
        "mlx/backend/metal/kernels/steel/attn/params.h",
        "mlx/backend/metal/kernels/steel/attn/transforms.h",
        "mlx/backend/metal/kernels/steel/attn/kernels/steel_attention.h",
        "mlx/backend/metal/kernels/arange.h",
        "mlx/backend/metal/kernels/binary.h",
        "mlx/backend/metal/kernels/binary_ops.h",
        "mlx/backend/metal/kernels/binary_two.h",
        "mlx/backend/metal/kernels/copy.h",
        "mlx/backend/metal/kernels/fft.h",
        "mlx/backend/metal/kernels/fft/radix.h",
        "mlx/backend/metal/kernels/fft/readwrite.h",
        "mlx/backend/metal/kernels/atomic.h",
        "mlx/backend/metal/kernels/reduction/ops.h",
        "mlx/backend/metal/kernels/reduction/reduce_init.h",
        "mlx/backend/metal/kernels/reduction/reduce_all.h",
        "mlx/backend/metal/kernels/reduction/reduce_col.h",
        "mlx/backend/metal/kernels/reduction/reduce_row.h",
        "mlx/backend/metal/kernels/quantized.h",
        "mlx/backend/metal/kernels/scan.h",
        "mlx/backend/metal/kernels/softmax.h",
        "mlx/backend/metal/kernels/sort.h",
        "mlx/backend/metal/kernels/ternary.h",
        "mlx/backend/metal/kernels/ternary_ops.h",
        "mlx/backend/metal/kernels/unary.h",
        "mlx/backend/metal/kernels/unary_ops.h",
        "mlx/backend/metal/kernels/gemv_masked.h",
        "mlx/backend/metal/kernels/steel/gemm/params.h",
        "mlx/backend/metal/kernels/reduce.h",
        "mlx/backend/metal/kernels/erf.h",
    ],
    out = "mlx.metallib",
)

genrule(
    name = "generate_metal_path",
    outs = ["mlx/backend/metal/metal_path.h"],
    cmd_bash = "bash $(location :define_metal_path.sh) $(location :mlx_metallib) $@",
    tools = [":define_metal_path.sh", ":mlx_metallib"],
)

cc_library(
    name = "libmlx",
    alwayslink = 1,
    data = [":mlx_metallib"],
    includes = ["@metal_cpp//:metal_cpp"],
    visibility = ["//visibility:public"],
    linkopts = [
        "-framework",
        "Metal",
        "-framework",
        "Foundation",
        "-framework",
        "QuartzCore",
    ],
    srcs = [
        ":generate_metal_path",
        "mlx/allocator.cpp",
        "mlx/array.cpp",
        "mlx/array.h",
        "mlx/compile.cpp",
        "mlx/device.cpp",
        "mlx/dtype.cpp",
        "mlx/einsum.cpp",
        "mlx/export.cpp",
        "mlx/fast.cpp",
        "mlx/fft.cpp",
        "mlx/ops.cpp",
        "mlx/graph_utils.cpp",
        "mlx/primitives.cpp",
        "mlx/random.cpp",
        "mlx/scheduler.cpp",
        "mlx/transforms.cpp",
        "mlx/utils.cpp",
        "mlx/linalg.cpp",
        # common backend
        "mlx/backend/common/common.cpp",
        "mlx/backend/common/compiled.cpp",
        "mlx/backend/common/load.cpp",
        "mlx/backend/common/reduce.cpp",
        "mlx/backend/common/slicing.cpp",
        "mlx/backend/common/utils.cpp",
        # no cpu
        "mlx/backend/no_cpu/compiled.cpp",
        "mlx/backend/no_cpu/primitives.cpp",
        # distributed
        "mlx/distributed/primitives.cpp",
        "mlx/distributed/ops.cpp",
        "mlx/distributed/distributed.cpp",
        # no mpi
        "mlx/distributed/mpi/no_mpi.cpp",
        # no ring
        "mlx/distributed/ring/no_ring.cpp",
        # no safetensors/gguf io
        "mlx/io/load.cpp",
        "mlx/io/no_safetensors.cpp",
        "mlx/io/no_gguf.cpp",
        # required jit metal kernels (patch)
        "mlx/backend/metal/jit/binary_ops.cpp",
        "mlx/backend/metal/jit/gather_axis.cpp",
        "mlx/backend/metal/jit/gather.cpp",
        "mlx/backend/metal/jit/hadamard.cpp",
        "mlx/backend/metal/jit/reduce_utils.cpp",
        "mlx/backend/metal/jit/scatter_axis.cpp",
        "mlx/backend/metal/jit/scatter.cpp",
        "mlx/backend/metal/jit/ternary_ops.cpp",
        "mlx/backend/metal/jit/unary_ops.cpp",
        "mlx/backend/metal/jit/utils.cpp",
        # metal backend
        "mlx/backend/metal/nojit_kernels.cpp",
        "mlx/backend/metal/allocator.cpp",
        "mlx/backend/metal/binary.cpp",
        "mlx/backend/metal/compiled.cpp",
        "mlx/backend/metal/conv.cpp",
        "mlx/backend/metal/copy.cpp",
        "mlx/backend/metal/custom_kernel.cpp",
        "mlx/backend/metal/distributed.cpp",
        "mlx/backend/metal/device.cpp",
        "mlx/backend/metal/event.cpp",
        "mlx/backend/metal/fence.cpp",
        "mlx/backend/metal/fft.cpp",
        "mlx/backend/metal/hadamard.cpp",
        "mlx/backend/metal/indexing.cpp",
        "mlx/backend/metal/matmul.cpp",
        "mlx/backend/metal/scaled_dot_product_attention.cpp",
        "mlx/backend/metal/metal.cpp",
        "mlx/backend/metal/primitives.cpp",
        "mlx/backend/metal/quantized.cpp",
        "mlx/backend/metal/normalization.cpp",
        "mlx/backend/metal/rope.cpp",
        "mlx/backend/metal/scan.cpp",
        "mlx/backend/metal/slicing.cpp",
        "mlx/backend/metal/softmax.cpp",
        "mlx/backend/metal/sort.cpp",
        "mlx/backend/metal/reduce.cpp",
        "mlx/backend/metal/ternary.cpp",
        "mlx/backend/metal/unary.cpp",
        "mlx/backend/metal/resident.cpp",
        "mlx/backend/metal/utils.cpp",
    ],
    hdrs = [
        "mlx/3rdparty/pocketfft.h",
        "mlx/allocator.h",
        "mlx/array.h",
        # "mlx/backend/common/arange.h",
        "mlx/backend/common/binary.h",
        # "mlx/backend/common/binary_two.h",
        "mlx/backend/common/compiled.h",
        # "mlx/backend/common/compiled_preamble.h",
        "mlx/backend/common/copy.h",
        "mlx/backend/common/hadamard.h",
        # "mlx/backend/common/lapack.h",
        "mlx/backend/common/load.h",
        "mlx/backend/common/reduce.h",
        "mlx/backend/common/slicing.h",
        "mlx/backend/common/ternary.h",
        # "mlx/backend/common/threefry.h",
        # "mlx/backend/common/unary.h",
        "mlx/backend/common/utils.h",
        "mlx/backend/metal/allocator.h",
        "mlx/backend/metal/binary.h",
        "mlx/backend/metal/copy.h",
        "mlx/backend/metal/device.h",
        "mlx/backend/metal/event.h",
        "mlx/backend/metal/fence.h",
        # "mlx/backend/metal/jit/arange.h",
        # "mlx/backend/metal/jit/gemv_masked.h",
        "mlx/backend/metal/jit/includes.h",
        "mlx/backend/metal/jit/indexing.h",
        # "mlx/backend/metal/jit/softmax.h",
        # "mlx/backend/metal/jit/steel_conv.h",
        # "mlx/backend/metal/jit/steel_gemm.h",
        #TODO(cryptodeal): maybe move to srcs
        "mlx/backend/metal/kernels.h",
        # "mlx/backend/metal/kernels/arange.h",
        # "mlx/backend/metal/kernels/atomic.h",
        # "mlx/backend/metal/kernels/bf16_math.h",
        # "mlx/backend/metal/kernels/binary.h",
        # "mlx/backend/metal/kernels/binary_ops.h",
        # "mlx/backend/metal/kernels/binary_two.h",
        # "mlx/backend/metal/kernels/complex.h",
        # "mlx/backend/metal/kernels/copy.h",
        "mlx/backend/metal/kernels/defines.h",
        # "mlx/backend/metal/kernels/erf.h",
        # "mlx/backend/metal/kernels/expm1f.h",
        # "mlx/backend/metal/kernels/fft/radix.h",
        # "mlx/backend/metal/kernels/fft/readwrite.h",
        # "mlx/backend/metal/kernels/fft.h",
        # "mlx/backend/metal/kernels/gather.h",
        # "mlx/backend/metal/kernels/gemv_masked.h",
        # "mlx/backend/metal/kernels/hadamard.h",
        # "mlx/backend/metal/kernels/indexing.h",
        # "mlx/backend/metal/kernels/jit/bf16.h",
        # "mlx/backend/metal/kernels/metal_3_1/bf16.h",
        # "mlx/backend/metal/kernels/quantized.h",
        # "mlx/backend/metal/kernels/reduce.h",
        # "mlx/backend/metal/kernels/reduce_utils.h",
        # "mlx/backend/metal/kernels/reduction/ops.h",
        # "mlx/backend/metal/kernels/reduction/reduce_all.h",
        # "mlx/backend/metal/kernels/reduction/reduce_col.h",
        # "mlx/backend/metal/kernels/reduction/reduce_init.h",
        # "mlx/backend/metal/kernels/reduction/reduce_row.h",
        # "mlx/backend/metal/kernels/scan.h",
        # "mlx/backend/metal/kernels/scatter.h",
        # "mlx/backend/metal/kernels/sdpa_vector.h",
        # "mlx/backend/metal/kernels/softmax.h",
        # "mlx/backend/metal/kernels/sort.h",
        # "mlx/backend/metal/kernels/steel/attn/attn.h",
        # "mlx/backend/metal/kernels/steel/attn/kernels/steel_attention.h",
        # "mlx/backend/metal/kernels/steel/attn/loader.h",
        # "mlx/backend/metal/kernels/steel/attn/mma.h",
        "mlx/backend/metal/kernels/steel/attn/params.h",
        # "mlx/backend/metal/kernels/steel/attn/transforms.h",
        # "mlx/backend/metal/kernels/steel/conv/conv.h",
        # "mlx/backend/metal/kernels/steel/conv/kernels/steel_conv.h",
        # "mlx/backend/metal/kernels/steel/conv/kernels/steel_conv_general.h",
        # "mlx/backend/metal/kernels/steel/conv/loader.h",
        # "mlx/backend/metal/kernels/steel/conv/loaders/loader_channel_l.h",
        # "mlx/backend/metal/kernels/steel/conv/loaders/loader_channel_n.h",
        # "mlx/backend/metal/kernels/steel/conv/loaders/loader_general.h",
        "mlx/backend/metal/kernels/steel/conv/params.h",
        # "mlx/backend/metal/kernels/steel/defines.h",
        # "mlx/backend/metal/kernels/steel/gemm/gemm.h",
        # "mlx/backend/metal/kernels/steel/gemm/kernels/steel_gemm_fused.h",
        # "mlx/backend/metal/kernels/steel/gemm/kernels/steel_gemm_masked.h",
        # "mlx/backend/metal/kernels/steel/gemm/kernels/steel_gemm_splitk.h",
        # "mlx/backend/metal/kernels/steel/gemm/loader.h",
        # "mlx/backend/metal/kernels/steel/gemm/mma.h",
        "mlx/backend/metal/kernels/steel/gemm/params.h",
        # "mlx/backend/metal/kernels/steel/gemm/transforms.h",
        # "mlx/backend/metal/kernels/steel/utils/integral_constant.h",
        # "mlx/backend/metal/kernels/steel/utils/type_traits.h",
        # "mlx/backend/metal/kernels/steel/utils.h",
        # "mlx/backend/metal/kernels/ternary.h",
        # "mlx/backend/metal/kernels/ternary_ops.h",
        # "mlx/backend/metal/kernels/unary.h",
        # "mlx/backend/metal/kernels/unary_ops.h",
        # "mlx/backend/metal/kernels/utils.h",
        "mlx/backend/metal/matmul.h",
        "mlx/backend/metal/metal.h",
        "mlx/backend/metal/metal_impl.h",
        "mlx/backend/metal/reduce.h",
        "mlx/backend/metal/resident.h",
        "mlx/backend/metal/slicing.h",
        # "mlx/backend/metal/ternary.h",
        "mlx/backend/metal/unary.h",
        "mlx/backend/metal/utils.h",
        "mlx/compile.h",
        "mlx/compile_impl.h",
        "mlx/device.h",
        "mlx/distributed/distributed_impl.h",
        "mlx/distributed/distributed.h",
        "mlx/distributed/ops.h",
        "mlx/distributed/primitives.h",
        "mlx/distributed/mpi/mpi.h",
        "mlx/distributed/ring/ring.h",
        "mlx/dtype.h",
        "mlx/einsum.h",
        "mlx/event.h",
        "mlx/export.h",
        "mlx/export_impl.h",
        "mlx/fast.h",
        "mlx/fast_primitives.h",
        "mlx/fft.h",
        "mlx/graph_utils.h",
        # "mlx/io/gguf.h",
        "mlx/io/load.h",
        "mlx/io.h",
        "mlx/linalg.h",
        "mlx/mlx.h",
        "mlx/ops.h",
        "mlx/primitives.h",
        "mlx/random.h",
        "mlx/scheduler.h",
        "mlx/stream.h",
        "mlx/threadpool.h",
        "mlx/transforms.h",
        "mlx/transforms_impl.h",
        "mlx/types/bf16.h",
        "mlx/types/complex.h",
        # "mlx/types/fp16.h",
        "mlx/types/half_types.h",
        "mlx/types/limits.h",
        "mlx/utils.h",
    ],
    deps = [
        "@metal_cpp//:metal_cpp",
        "@fmt",
    ],
)
